ansible-playbook http.yaml --start-at-task 'Install telnet'

ansible-galaxy collection install community.general

ansible localhost -m ping -a 

ansible all -m file -a "path=/home/ganislp/adhoc1 state=touch mode=700"

ansible all -m file -a "path=/home/ganislp/adhoc1 state=absent"

ansible all -m copy -a "src=/tmp/adh02 dest=/home/ganislp/adh02"

ansible all -m apt -a "name=telnet state=present"

ansible all -m service -a "name=httpd state=started"

ansible all -m service -a "name=httpd state=started enabled=yes"

ansible all -m shell -a "systemctl status httpd"

ansible all -m apt -a "name=httpd state=absent"

ansible all -m shell -a "apt remove httpd"

ansible all -m user -a "name=sl home=/home/sl shell=/bin/bash state=present"

ansible all -m user -a "name=sl group=ganislp"

ansible all -m user -a "name=sl home=/home/sl shell=/bin/bash state=absent"

ansible all -m setup

ansible client1 -a "/sbin/reboot"

---------------------tags------------------------

ansible-playbook httpsetup-playbook.yaml -t i-apache2 
ansible-playbook httpsetup-playbook.yaml -t s-apache2 
ansible-playbook httpsetup-playbook.yaml  --list-tags

ansible-playbook httpsetup-playbook.yaml --start-at-task "Install apache packages"

--------------------variables------------------
Inventory file

[abc:vars]
fooservers=foo.abc.example.com

------------------Handlers-------------------------------
reload,start,restart,stop service when notified

notify
handlers
-------------------Conditions---------------------------------
WHEN
ansible_os_family

ansible localhost -m setup

--------------loop---------------------
loop and with_*
for loop

for u in j k m ; do useradd $u; done

for p in ftp telnet htop; yum install $p -y; done

ansible-vault create httpy.yaml

ansible-playbook httpy.yaml --ask-vault-pass

ansible-vault encrypt_string httpd

ansible-vault encrypt/create outputbystring.yml

vars:
  secrect: !vault |


  ansible-playbook outputbystring.yml --ask-vault-pass






